{"version":3,"sources":["components/SearchBox.js","components/Nav.js","components/DataBody.js","components/DataTable.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","handleInputChange","onChange","className","type","placeholder","aria-label","Nav","id","DataBody","image","firstName","lastName","phone","email","dob","scope","src","thumbnail","alt","Moment","format","DataTable","employees","sortByName","onClick","map","employee","picture","name","first","last","cell","date","axios","get","DataArea","state","search","results","searchedEmployees","event","setState","target","value","foundEmployees","filter","toLowerCase","indexOf","getEmployees","API","then","res","data","catch","err","console","log","sort","employee1","employee2","resultsOrSearched","this","Component","Main","Wrapper","props","children","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1a34c7e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction SearchBox({ handleInputChange }) {\r\n    return (\r\n        <input onChange={handleInputChange} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from \"react\";\r\nimport SearchBox from \"./SearchBox\"\r\n\r\nfunction Nav({ handleInputChange }) {\r\n    return (\r\n        <nav className=\"navbar narvbar-expand navbar-light bg-light\">\r\n            <div className=\"narbar-collapse row\" id=\"navbarNav\"/>\r\n            <SearchBox handleInputChange={handleInputChange} />\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from \"react\";\r\nimport Moment from \"moment\"\r\n\r\nfunction DataBody({ image, firstName, lastName, phone, email, dob }) {\r\n    return (\r\n        <tr>\r\n            <th scope=\"row\">\r\n                <img src={image.thumbnail} alt={firstName + \" \" + lastName} />\r\n            </th>\r\n            <td>{firstName + \" \" + lastName}</td>\r\n            <td>{phone}</td>\r\n            <td>{email}</td>\r\n            <td>{Moment(dob).format(\"MM/DD/YYYY\")}</td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default DataBody;\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport DataBody from \"./DataBody\"\r\n\r\n\r\nfunction DataTable({ employees, sortByName }) {\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th scope=\"col\">Image</th>\r\n                    <th onClick={() => sortByName()} scope=\"col\">Name</th>\r\n                    <th scope=\"col\">Phone</th>\r\n                    <th scope=\"col\">Email</th>\r\n                    <th scope=\"col\">DOB</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {employees.map(employee => (\r\n                    <DataBody\r\n                        key={employee.cell}\r\n                        image={employee.picture}\r\n                        firstName={employee.name.first}\r\n                        lastName={employee.name.last}\r\n                        phone={employee.cell}\r\n                        email={employee.email}\r\n                        dob={employee.dob.date}\r\n                    />\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n\r\nexport default DataTable;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    // Gets all users\r\n    getUsers: function () {\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n}; ","import React, { Component } from \"react\";\r\nimport Nav from \"./Nav\";\r\nimport DataTable from \"./DataTable\";\r\nimport API from \"../utils/API\"\r\n\r\nclass DataArea extends Component {\r\n    state = {\r\n        search: \"\",\r\n        results: [],\r\n        searchedEmployees: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getEmployees();\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n        this.setState({ search: event.target.value })\r\n        const search = event.target.value;\r\n        const foundEmployees = this.state.results.filter(name => {\r\n            let values = name.name.first.toLowerCase();\r\n            return values.indexOf(search.toLowerCase()) !== -1;\r\n        });\r\n        \r\n        this.setState({ searchedEmployees: foundEmployees });\r\n    };\r\n\r\n    getEmployees = () => {\r\n        API.getUsers()\r\n            .then(res => {\r\n                this.setState({ results: res.data.results });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    sortByName = () => {\r\n        const employees = this.state.results\r\n        employees.sort((employee1, employee2) => {\r\n            if (employee1.name.first > employee2.name.first) return 1\r\n            else return -1\r\n        })\r\n        this.setState({ results: employees })\r\n    }\r\n\r\n    resultsOrSearched = () => {\r\n        if (this.state.search !== \"\") {\r\n            return <DataTable sortByName={this.sortByName} employees={this.state.searchedEmployees} />\r\n        }\r\n        else {\r\n            return <DataTable sortByName={this.sortByName} employees={this.state.results} />\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Nav handleInputChange={this.handleInputChange} />\r\n                {this.resultsOrSearched()}\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default DataArea;","import React from \"react\";\r\nimport DataArea from \"./DataArea\";\r\n\r\nfunction Main() {\r\n    return (\r\n        <DataArea />\r\n    )\r\n}\r\n\r\nexport default Main;","import React from \"react\";\r\n\r\nfunction Wrapper(props) {\r\n  return <main className=\"wrapper\">{props.children}</main>;\r\n}\r\n\r\nexport default Wrapper;","import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"jumbotron jumbotron-fluid\">\r\n            <div className=\"container\">\r\n                <h1 className=\"display-4\">Employee Directory</h1>\r\n                <p className=\"lead\">Click on carrots to filter by heading or use the search box to narrow your results</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}